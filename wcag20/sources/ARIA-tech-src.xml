<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE spec SYSTEM "xmlspec.dtd">
<spec status="final" w3c-doctype="wgnote">
	<header>
		<title>ARIA Techniques</title>
		<w3c-designation>WCAG20-ARIA-TECHS</w3c-designation>
		<w3c-doctype>W3C Working Group Note</w3c-doctype>
		<pubdate>
			<day>3</day>
			<month>January</month>
			<year>2012</year>
		</pubdate>
		<publoc>
			<loc href="http://www.w3.org/WAI/GL/WCAG20/sources/ARIA-tech-src.xml">http://www.w3.org/WAI/GL/WCAG20/sources/ARIA-tech-src.xml</loc>
		</publoc>
		<latestloc>
			<loc href="http://www.w3.org/WAI/GL/WCAG20/sources/ARIA-tech-src.xml">http://www.w3.org/WAI/GL/WCAG20/sources/ARIA-tech-src.xml</loc>
		</latestloc>
		<authlist>
			<author>
				<name>Ben Caldwell</name>
				<affiliation>Trace R&amp;D Center </affiliation>
			</author>
		</authlist>
		<status>
			<p/>
		</status>
		<abstract>
			<p>Placeholder - actual abstract text for WCAG20-TECHS is included in the XSLT, techs-merge.xslt. This file contains the XML for general techniques and can be used in conjunction with techs-sample-output.xsl to check that techniques will output correctly. </p>
		</abstract>
		<langusage>
			<language id="en-US"/>
		</langusage>
		<revisiondesc>
			<p/>
		</revisiondesc>
	</header>
	<body>
		<!-- techniques -->
		<div1 id="aria">
			<head>ARIA Techniques</head>
			<div2 id="wai-aria_notes">
				<head>WAI-ARIA Technology Notes</head>
				<p>To improve accessibility, WAI-ARIA provides Web developers with
          the option to add the following semantic information to Web
          pages and rich Internet widgets which are then exposed to the
          browser: </p>
				<ulist>
					<item>
						<p>Roles to describe the type of widget presented, such as
              "menu", "treeitem", "slider" and "progressbar." </p>
					</item>
					<item>
						<p>Roles to describe the structure of the Web page, such as
              headings, regions, search areas and navigation areas. </p>
					</item>
					<item>
						<p>Properties to describe the state widgets are in, such as
              "checked" for a check box, "haspopup" for a menu that
              renders a sub-menu or other popup and "expanded/collapsed"
              for a tree node. </p>
					</item>
					<item>
						<p>Properties to define <loc href="http://www.w3.org/TR/wai-aria/states_and_properties#attrs_liveregions">live regions</loc> of a page that are likely to
              get updates (such as stock quotes), as well as an
              interruption policy for those updates. Assistive
              technologies may present critical updates as soon as they
              are rendered. However, incidental updates are presented only
              after completing the current task. For example, a screen
              reader informs a user of an incidental update only after it
              finishes reading the current paragraph. </p>
					</item>
					<item>
					faria	<p>Properties for drag-and-drop that describe drag sources and
              drop targets </p>
					</item>
					<item>
						<p>A method to provide keyboard navigation for rich internet
              widgets.</p>
					</item>
				</ulist>
				<p>The combination of these features and the structural
          information conveyed by the DOM structure allow authors to
          produce an interoperable solution to assistive technologies.
          (Source: <loc href="http://www.w3.org/WAI/intro/aria">WAI-ARIA Overview</loc>)</p>
				<div3 id="wai-aria_ua_support">
					<head>User Agent Support for WAI-ARIA</head>
					<p>User Agent support for WAI-ARIA varies, but overall support for
            WAI-ARIA is improving. Browsers which support WAI-ARIA map
            WAI-ARIA roles and properties to platform accessibility APIs. </p>
					<ulist>
						<item>
							<p> Firefox 1.5 and Firefox 2.0 partially supports WAI-ARIA,
                  however it requires the use of namespaces, and doesn't
                  support the use of Liveregions.</p>
						</item>
						<item>
							<p> Firefox 3+ contains better support for WAI-ARIA, including
                  Liveregions.</p>
						</item>
						<item>
							<p> IE8 partially supports WAI-ARIA. </p>
						</item>
						<item>
							<p> JAWS 8 and Window-Eyes 5.5+ partially support
                  WAI-ARIA.</p>
						</item>
						<item>
							<p> Jaws 10+ supports WAI-ARIA. </p>
						</item>
						<item>
							<p> FireVox, a self-voicing extension to Firefox, also
                  supports WAI-ARIA via direct DOM access. </p>
						</item>
						<item>
							<p>NVDA partially supports WAI-ARIA.</p>
						</item>
					</ulist>
				</div3>
				<div3 id="wai-aria_accessibility_support">
					<head>Accessibility Support for WAI-ARIA</head>
					<p>Using technologies in an Accessibility Supported way is required for conformance claims. Read more about <loc href="accessibility-support-documenting" linktype="understanding">Accessibility Support</loc>. The WCAG Working Group plans to review which WAI-ARIA techniques are sufficient when Accessible Rich Internet Application specifications reach W3C recommendation status. Refer to <loc href="http://www.w3.org/WAI/intro/aria">WAI-ARIA Overview</loc> for the latest information on the status of WAI-ARIA.</p>
				</div3>
			</div2>
			<technique id="ARIA1">
				<short-name>Using the aria-describedby property to provide a descriptive label for user interface controls</short-name>
				<applicability>
					<p>Technologies that support <loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA)</loc>. </p>
					<ednote>
						<edtext>This technique will be applicable when  Accessible Rich Internet Application specifications reach W3C recommendation status.</edtext>
					</ednote>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="sufficient"/>
					<success-criterion idref="minimize-error-cues" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>See <specref ref="wai-aria_ua_support"/> for general information on user agent support.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The purpose of this technique is to demonstrate how to use the   WAI-ARIA <loc href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby">aria-describedby</loc> property to provide programmatically   determined, descriptive information about a user interface element. The <att>aria-describedby</att> property may be used to attach descriptive information to one or more elements through the use of an id reference list. The id reference list contains one or more unique element ids. </p>
					<p>Refer to <loc href="http://www.w3.org/TR/wai-aria-primer/#ariahtml">Supporting ARIA in XHTML and HTML 4.01</loc> for information on how to provide WAI-ARIA States and Properties with XHTML and HTML. WAI-ARIA States and Properties is compatible with other languages as well; refer to documentation in those languages. </p>
					<note>
						<p>The <att>aria-describedby</att> property is not designed to reference descriptions on an external resource â€” since it is an ID, it must reference an element in the same DOM document.</p>
					</note>
				</description>
				<examples>
					<eg-group>
						<head>Using aria-describedby property to describe a Close button's action</head>
						<description>
							<p>A button that functions as a 'close' button on a dialog is described elsewhere in the document. The <att>aria-describedby</att> property is used to associate the description with the link. This example taken from @@ (from where?)</p>
						<codeblock xml:space="preserve"><![CDATA[<button aria-label="Close" aria-describedby="descriptionClose" 
    onclick="myDialog.close()">X</button>

...

<div id="descriptionClose">Closing this window will discard any information entered and 
return you back to the main page</div>
]]></codeblock>
                            </description>
                        </eg-group>
					<eg-group>
						<head>Using aria-describedby to associate instructions with form fields</head>
						<description>
							<p>Sample form field using <att>aria-describedby</att> to associate instructions with form fields while there is a form label.</p>
						<codeblock xml:space="preserve"><![CDATA[ <form> 
<label for="fname">First name</label>  
<input name="" type="text" id="fname" aria-describedby="int2"> 
<p id="int2">A  bit of instructions for this field linked with aria-describedby. </p>
</form>
]]></codeblock>
                            <p><loc href="http://3needs.org/en/testing/code/aria-describedby-close.html">Working version of example 2</loc></p>
                        </description>
					</eg-group>
					<eg-group>
						<head>Using aria-describedby property to provide more detailed information about the button</head>
						<description>
						<codeblock xml:space="preserve"><![CDATA[<p><span id="fontDesc">Select the font faces and sizes to be used on this page</span>
 <button id="fontB" onclick="doAction('Fonts');" aria-describedby="fontDesc"> Fonts </button>
</p>
<p><span id="colorDesc">Select the colors to be used on this page</span>
 <button id="colorB" onclick="doAction('Colors');" aria-describedby="colorDesc"> Colors </button>
</p>
<p><span id="customDesc">Customize the layout and styles used on this page</span>
 <button id="customB" onclick="doAction('Customize');" aria-describedby="customDesc"> Customize </button>
</p>
]]></codeblock>
                        </description>
					</eg-group>
					<eg-group>
						<head>Using aria-describedby associate tooltips with form fields</head>
                            <description>
                                <p>The following code snippet from the <loc href="http://test.cita.uiuc.edu/aria/tooltip/tooltip1.php">iCITA</loc> site shows how to use <att>aria-describedby</att> and the onfocus="tooltipShow() function to display the tooltip when focus is placed on an element.</p>
                            <codeblock xml:space="preserve"><![CDATA[<html lang="en-us"">  
<head>    
   <title>inline: Tooltip Example 1</title>      
   <link rel="stylesheet" href="css/tooltip1_inline.css"  type="text/css">    
   <script type="text/javascript" src="js/tooltip1_inline.js"></script>    
   <script type="text/javascript" src="../js/widgets_inline.js"></script>
   <script type="text/javascript" src="../js/globals.js"></script>          
   <link rel="icon" href="http://www.cites.uiuc.edu/favicon.ico" type="image/x-icon">    
   <link rel="shortcut icon" href="http://www.cites.uiuc.edu/favicon.ico" type="image/x-icon"> 
</head>
   ...   

   <body onload="initApp()">

   <div id="container">

   <h1>Tooltip Example 1</h1>
     <h2>Create Account</h2>
   <div class="text">
   <label for="first">First Name:</label> 

   <input type="text"  id="first" name="first" size="20" 
          onmouseover="tooltipShow(event, this, 'tp1');"     
          onfocus="tooltipShow(event, this,  'tp1');" 
          aria-describedby="tp1"  		 
          aria-required="false"/>

   <div id="tp1" role="tooltip" aria-hidden="true">Your first name is optional. </div>    
   </div>
]]></codeblock>
                        </description>
					</eg-group>
                </examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc href="http://www.w3.org/WAI/intro/aria">WAI-ARIA   Overview</loc></p>
							</item>
							<item>
								<p><loc ref="http://www.w3.org/TR/wai-aria-practices/">WAI-ARIA 1.0 Authoring Practices</loc> </p>
							</item>
                            <item>
								<p> <loc
									href="http://www.w3.org/TR/html-aapi/#accessible-name-and-description-calculation">HTML to Platform Accessibility APIs Implementation Guide: Accessible Name and Description Calculation</loc> </p>
							</item>
							<item>
								<p><loc ref="https://developer.mozilla.org/en-US/docs/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-describedby_attribute">Using the aria-describedby attribute (MDN)</loc></p>
							</item>
							<item>
								<p><loc ref="http://www.w3.org/TR/aria-in-html/">Using WAI-ARIA in HTML</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
<related-techniques>
					<relatedtech idref="ARIA2"/>
					<relatedtech idref="@@"/><!-- using aria-describedby for link purpose -->
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p>Check that there is a user interface control having an <att>aria-describedby</att> attribute that references one or more elements via unique id.</p>
							</item>
							<item>
								<p> Check that the referenced element or elements provide   additional information about the user interface control. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Checks #1 and #2 are true. </p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="ARIA2">
				<short-name>Identifying a required field with the aria-required property</short-name>
				<applicability>
					<p>Technologies that support <loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA)</loc>. </p>
					<ednote>
						<edtext>This technique will be applicable when  Accessible Rich Internet Application specifications reach W3C recommendation status.</edtext>
					</ednote>
				</applicability>
				<applies-to>
					<success-criterion idref="content-structure-separation-programmatic" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>See <specref ref="wai-aria_ua_support"/> for general information on user agent support.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to indicate in a programmatically determined way that the completion of a user input field is mandatory for successful submission of a form when there is a visual cue to this effect.</p>
                    <p>The fact that the element is required is often visually presented (via a text or non-text symbol, or text indicating input is required or color / styling) but this is not programmatically determinable as part of the field's name.</p>
                        <p>The WAI-ARIA <prop>aria-required</prop> property indicates that user input is required before submission. The <prop>aria-required</prop> property can have values of <attval>true</attval> or <attval>false</attval>. For example, if a user must fill in an address field, then aria-required is set to <attval>true</attval>.</p>
                        <note>						
						<p>Note: Use of <code>aria-required="true"</code> might be beneficial even when an asterisk or other text symbol is programmatically associated with the field as it may reinforce its <prop>required</prop> property for some assistive technology users.</p>
					   </note>
				</description>
				<examples>
					<eg-group>
						<head/>
						<description>
							<p>The <prop>required</prop> property is indicated by an asterisk placed next to the label element:</p>
						<codeblock xml:space="preserve"><![CDATA[
<form action="#" method="post"  id="login1" onsubmit="return errorCheck1()">
  <p>Note: [*]denotes mandatory field</p> 
  <p>
    <label for="usrname">Login name: </label> 
    <input type="text" name="usrname" id="usrname" aria-required="true"/>[*]
  </p>
  <p>
    <label for="pwd">Password</label> 
    <input type="password" name="pwd" id="pwd" size="12" aria-required="true" />[*]
  </p> 
  <p>
    <input type="submit" value="Login" id="next_btn" name="next_btn"/>
  </p>
 
</form>		]]></codeblock>
                        </description>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<p>The <prop>required</prop> property is indicated by the word "required" placed next to the <el>label</el> element:</p>
						<codeblock xml:space="preserve"><![CDATA[<head>
<form action="#" method="post" id="step1" onsubmit="return errorCheck2()">
  <p>
    <label for="fname">First name: </label> 
    <input type="text" id="fname" aria-required="true" />
    [required]
  </p>
  <p>
    <label for="mname">Middle name: </label> 
    <input type="text" id="mname" />
  </p>
  <p>
    <label for="lname">Last name: </label> 
    <input type="text" id="lname" aria-required="true" />
    [required]
  </p>
  <p>
    <label for="email">Email address: </label> 
    <input type="text" id="email" aria-required="true" />
    [required]
  </p>
  <p>
    <label for="zip_post">Zip / Postal code: </label> 
    <input type="text" id="zip_post" size="6" aria-required="true" />
  </p>
  <p>
    <input type="submit" value="Next Step" id="step_btn" name="step_btn" />
  </p>
</form> ]]></codeblock>
                        </description>
					</eg-group>
					<eg-group>
						<head/>
						<description>
							<p>Required fields are indicated by a red border around the fields and a star icon rendered via CSS using <code role="css">content:before</code>. This example also uses custom radio buttons with <code>role=radio</code> but the script to make the span actually work like radio buttons is not included in this example. The CSS properties are available below the form.
</p>
						<codeblock xml:space="preserve"><![CDATA[<head>
<form action="#" method="post" id="alerts1">
  <label for="acctnum" data-required="true">Account Number</label>
  <input size="12" type="text"
      aria-required="true" name="acctnum" />

 <p id="radio_label">Please send an alert when balance exceeds $3,000.</p>
 
 <ul  id="rg" role="radiogroup" aria-labelledby="radio_label">
    <li id="rb1" role="radio" aria-required="true">Yes</li>
    <li id="rb2" role="radio" aria-required="true">No</li>
 </ul>	
</form> 
 ]]></codeblock>
						<codeblock xml:space="preserve"><![CDATA[<head>
[aria-required=true] {
  border: red thin solid;
} 
[aria-required=true]:before {
  content: url('/iconStar.gif');
}

[data-required=true]:after {
  content: url('/iconStar.gif');
}
 ]]></codeblock>                            
                        </description>
					</eg-group>
                </examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/WAI/intro/aria">WAI-ARIA   Overview</loc>
								</p>
							</item>
							<item>
								<p><loc ref="http://www.w3.org/TR/wai-aria-practices/">WAI-ARIA 1.0 Authoring Practices</loc> </p>
							</item>
                            <item>
								<p> <loc
									href="http://www.deque.com/aria-requiredtrue-wcag-2-compliance-practice">Aria-required=true: WCAG 2 Compliance versus Best Practice</loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<!--
				<related-techniques>
					<relatedtech idref="ARIA3"/>
				</related-techniques>
				-->
				<tests>
					<procedure>
                        <p>For each element where the aria-required attribute is present:</p>
                        <olist>
							<item>
								<p>Check whether the value of the <att>aria-required</att> attribute is the correct required state of the user interface component.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>Check #1 is true</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<!-- removed until UA support improves
			<technique id="ARIA3">
				<short-name>Identifying valid range information with the aria-valuemin and aria-valuemax properties</short-name>
				<applicability>
					<p>Technologies that support <loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA)</loc>. </p>
					<ednote>
						<edtext>This technique will be applicable when  Accessible Rich Internet Application specifications reach W3C recommendation status.</edtext>
					</ednote>
				</applicability>
				<applies-to>
					<success-criterion idref="minimize-error-suggestions" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>See <specref ref="wai-aria_ua_support"/> for general information on user agent support.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to provide information about the   allowable range of an entry field in a programmatically determinable   way. The WAI-ARIA <loc href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemin">
							<prop>aria-valuemin</prop>
						</loc> and <loc href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemax">
							<prop>aria-valuemax</prop>
						</loc> states provide the minimum and maximum   (respectively) values that may be provided by the user. Some user   agents will not permit users to enter values outside that range, or will   generate a validation error if users do so. The developer is still   responsible for providing validation that the value is within the range. </p>
					<p>Refer to <loc href="http://www.w3.org/TR/wai-aria-primer/#ariahtml">Supporting   ARIA in XHTML and HTML 4.01</loc> for information on how to provide   WAI-ARIA States and Properties with XHTML and HTML. WAI-ARIA States and   Properties is compatible with other languages as well; refer to   documentation in those languages. </p>
					<note>
						<p> At this time, WAI-ARIA is a Working Draft. This technique   is provided as an advisory technique for organizations that wish to   experiment with achieving WCAG conformance using WAI-ARIA. When WAI-ARIA   becomes a formal specification and is supported in user agents, it is   anticipated that this technique will become a sufficient technique. </p>
					</note>
				</description>
				<examples>
					<eg-group>
						<head>A spinner control that provides values between 1 and 100</head>
						<description>
							<p>The following spin button allows users to enter a number between 1 and 100 (inclusive).</p>
						</description>
						<code xml:space="preserve"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 
  For Accessible Adaptable Applications//EN" "http://www.w3.org/WAI/ARIA/schemata/xhtml-aria-1.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" 
  xml:lang="en">
<head>
  <title>Spin Button</title>
</head>
<body>
  <h1>Spin Button</h1>
  <p>Spin button allows users to enter a number between 1 and 100. It is 
    implemented as a text input, to which user agents that do not support 
    ARIA roles fall back.</p>
  <form action="http://example.com/submit">
    <p><label for="test">Enter a number between 1 and 100</label>
    <input name="test" id="test" role="spinbutton" 
      aria-valuemin="1" aria-valuemax="100" /></p>
    <p><input type="submit" value="Submit" /></p>
  </form>
</body>
</html>]]></code>
					</eg-group>
				</examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p>
									<loc href="http://www.w3.org/WAI/intro/aria">WAI-ARIA   Overview</loc>
								</p>
							</item>
						</ulist>
					</see-also>
				</resources>
				<related-techniques>
					<relatedtech idref="ARIA2"/>
				</related-techniques>
				<tests>
					<procedure>
						<olist>
							<item>
								<p> Access a page with form fields that require data in a certain   range, using a user agent that supports the Accessible Rich Internet   Applications specification. </p>
							</item>
							<item>
								<p> Provide information that is outside the allowable range, and   attempt to submit the form. </p>
							</item>
							<item>
								<p> Check that the user agent notifies the user of the invalid   data. </p>
							</item>
							<item>
								<p> Provide information that is inside the allowable range, and   attempt to submit the form. </p>
							</item>
							<item>
								<p> Check that the user agent accepts the data and allows the   submit to proceed. </p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#3 and #5 are true</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			-->
			<technique id="ARIA4">
				<short-name>Using a WAI-ARIA role to expose the role of a user interface component</short-name>
				<applicability>
					<p>Technologies that support <loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA)</loc>.</p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-rsv" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>See <specref ref="wai-aria_ua_support"/> for general information on user agent support.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to define the role of an element using the <att>role</att> attribute with one of the non-abstract values defined in the <loc href="http://www.w3.org/TR/wai-aria/roles#role_definitions">WAI-ARIA Definition of Roles</loc>. The WAI-ARIA specification provides an informative description of each role, how it relates to other roles, and the states and properties for each role. When rich internet applications define new user interface widgets, exposing the roles enables users to understand the widget and how to interact with it.</p>
				</description>
				<examples>
					<eg-group>
						<head>A simple toolbar</head>
						<description>
							<p>The WAI-ARIA Authoring Practices document <loc href="http://www.w3.org/TR/2010/WD-wai-aria-practices-20100916/#accessiblewidget">demonstrates a toolbar containing three buttons</loc>. The <el>div</el> element has a role of "toolbar", and the <el>img</el> elements have "button" roles:</p>
						<codeblock xml:space="preserve"><![CDATA[
    <div role="toolbar"
      tabindex="0" 
      id="customToolbar" 
      onkeydown="return optionKeyEvent(event);"
      onkeypress="return optionKeyEvent(event);"
      onclick="return optionClickEvent(event);"
      onblur="hideFocus()"
      onfocus="showFocus()"
      > 
      <img src="img/btn1.gif" 
           role="button" 
           tabindex="-1" 
           alt="Home" 
           id="b1" 
           title="Home">
      <img src="img/btn2.gif" 
           role="button" 
           tabindex="-1" 
           alt="Refresh" 
           id="b2" 
           title="Refresh">
     <img src="img/btn3.gif" 
           role="button" 
           tabindex="-1" 
           alt="Help" 
           id="b3" 
           title="Help"> 
 </div>  
                        ]]></codeblock>
          <p>The AEGIS project website includes a <loc href="http://access.aol.com/aegis/#goto_menubar">working example of a menubar</loc>.</p>
                            </description>
                    </eg-group>
                    
					<eg-group>
						<head>A Tree Widget</head>
						<description>
							<p>The WAI-ARIA Primer <loc href="http://www.w3.org/TR/wai-aria-primer/#exampletree">demonstrates a tree widget</loc>. Note the use of the roles "tree", "treeitem", and "group" to identify the tree and its structure. Here is a simplified excerpt from the code:</p>
						<codeblock xml:space="preserve"><![CDATA[
<ul role="tree" tabindex="0">
  <li role="treeitem">Birds</li>
  <li role="treeitem">Cats
    <ul role="group">
      <li role="treeitem">Siamese</li>
      <li role="treeitem">Tabby</li>
    </ul>
  </li>
  <li role="treeitem">Dogs
    <ul role="group">
      <li role="treeitem">Small Breeds
        <ul role="group">
          <li role="treeitem">Chihuahua</li>
          <li role="treeitem">Italian Greyhound</li>
          <li role="treeitem">Japanese Chin</li>
        </ul>
      </li>
      <li role="treeitem"">Medium Breeds
        <ul role="group">
          <li role="treeitem">Beagle</li>
          <li role="treeitem">Cocker Spaniel</li>
          <li role="treeitem">Pit Bull</li>
        </ul>
      </li>
      <li role="treeitem">Large Breeds
        <ul role="group">
          <li role="treeitem">Afghan</li>
          <li role="treeitem">Great Dane</li>
          <li role="treeitem">Mastiff</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>
]]></codeblock>
                            <p>The AEGIS project website includes a <loc href="http://access.aol.com/aegis/#goto_tree">working example of a tree</loc>.</p>
                            </description>
                    </eg-group>
                </examples>
				<resources>
					<see-also>
						<ulist>
                            <item><p><loc href="http://www.w3.org/TR/wai-aria/usage#usage_intro">Accessible Rich Internet Applications (WAI-ARIA) 1.0, Roles</loc></p>
                            </item>
                            <item><p><loc href="http://www.w3.org/TR/wai-aria/roles">Accessible Rich Internet Applications (WAI-ARIA) 1.0, The Roles Model</loc></p>
                            </item>
                            <item><p><loc href="http://www.w3.org/TR/html-aapi/#html-element-to-accessibility-api-role-mapping-matrix">HTML to Platform Accessibility APIs Implementation Guide: HTML Element to Accessibility API Role Mapping Matrix</loc></p>
                            </item>
                            <item><p><loc href="http://www.w3.org/TR/wai-aria-primer/">WAI-ARIA 1.0 Primer</loc></p>
                            </item>
							<item>
								<p><loc ref="http://www.w3.org/TR/wai-aria-practices/">WAI-ARIA 1.0 Authoring Practices</loc> </p>
							</item>
							<item>
								<p><loc ref="http://www.w3.org/TR/aria-in-html/">Using WAI-ARIA in HTML</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
<related-techniques>
				</related-techniques>
				<tests>
					<procedure>
                        <p>For a user interface component using the <att>role</att> attribute:</p>
						<olist>
							<item>
								<p>Check that the value of the role attribute is one of the non-abstract roles from the values defined in the WAI-ARIA specification.</p>
							</item>
							<item>
								<p>Check that the characteristics of the user interface component are described by the role.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#1 and #2 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="ARIA5">
				<short-name>Using WAI-ARIA state and property attributes to expose the state of a user interface component</short-name>
				<applicability>
					<p>Technologies that support <loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA)</loc>. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="ensure-compat-rsv" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>See <specref ref="wai-aria_ua_support"/> for general information on user agent support.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to use <loc href="http://www.w3.org/TR/wai-aria/states_and_properties">WAI-ARIA state and property attributes</loc> to expose the state, properties and values of a user interface component so that they can be read and set by assistive technology, and so that assistive technology is notified of changes to these values. The WAI-ARIA specification provides a normative description of each attribute, and the role of the user interface elements that they support. When rich internet applications define new user interface widgets, exposing the state and property attributes enables users to understand the widget and how to interact with it.</p>
				</description>
				<examples>
					<eg-group>
						<head>A toggle button</head>
						<description>
							<p>A widget with role <att>button</att> acts as a toggle button when it implements the attribute <att>aria-pressed</att>. When <att>aria-pressed</att> is true, the button is in a "pressed" state. When <att>aria-pressed</att> is false, it is not pressed. If the attribute is not present, the button is a simple command button.</p>
                            <p>The following snippet from The Open Ajax Accessibility Examples, Example 38, shows WAI-ARIA mark-up for a toggle button that selects bold text:</p>
						<codeblock xml:space="preserve"><![CDATA[
  <li id="bold1"  
    class="toggleButton"
    role="button"
    tabindex="0"
    aria-pressed="false"
    aria-labelledby="bold_label"
    aria-controls="text1">
    <img src="http://www.oaa-accessibility.org/media/examples/images/button-bold.png" alt="bold text" align="middle">
</li>
]]></codeblock>
                            <p>The <el>li</el> element has a role of "button" and an "aria-pressed" attribute. The following excerpt from the Javascript for this example updates the value of the "aria-pressed" attribute:</p>
                            <codeblock xml:space="preserve"><![CDATA[                   
                             /**
   * togglePressed() toggles the aria-pressed atribute between true or false
   *
   * @param ( id object) button to be operated on
   *
   * @return N/A
   */
  function togglePressed(id) {
  
    // reverse the aria-pressed state
    if ($(id).attr('aria-pressed') == 'true') {
      $(id).attr('aria-pressed', 'false');
    }
    else {
      $(id).attr('aria-pressed', 'true');
    }
  }
                            ]]></codeblock>
<p>This button is available as part of the <loc href="http://www.oaa-accessibility.org/examplep/toolbar1/">working example of Example 38 - Toolbar using inline images for visual state</loc>, on the OpenAjax Alliance site.</p>
                        </description>
                    </eg-group>
                    
					<eg-group>
						<head>A slider</head>
						<description>
							<p>A widget with role <att>slider</att> lets a user select a value from within a given range. The slider represents the current value and the range of possible values via the size of the slider and the position of the handle. These properties of the slider are represented by the attributes <att>aria-valuemin</att>, <att>aria-valuemax</att>, and <att>aria-valuenow</att>.</p>

<p>The following snippet from The Open Ajax Accessibility Examples, Example 32, shows WAI-ARIA mark-up for a slider created in Javascript. Note that the javascript sets the attributes aria-valuemin, aria-valuemax, and aria-valuenow:</p>
						<codeblock xml:space="preserve"><![CDATA[   var handle = '<img id="' + id + '" class="' + (this.vert == true ? 'v':'h') +'sliderHandle" ' +
    'src="http://www.oaa-accessibility.org/media/examples/images/slider_' + (this.vert == true ? 'v':'h') + '.png" ' + 'role="slider" ' +
    'aria-valuemin="' + this.min +
    '" aria-valuemax="' + this.max +
    '" aria-valuenow="' + (val == undefined ? this.min : val) +
           '" aria-labelledby="' + label +
           '" aria-controls="' + controls + '" tabindex="0"></img>';]]></codeblock>
                            <p>The following excerpt from the Javascript for this example updates the value of the "aria-valuenow" attribute when the value of the slider handle is changed:</p>
						<codeblock xml:space="preserve"><![CDATA[ slider.prototype.positionHandle = function($handle, val) {
    ...
   // Set the aria-valuenow position of the handle
  $handle.attr('aria-valuenow', val);
   ...
  }
]]></codeblock>
                            <p>This slider is available as part of the <loc href="http://http//oaa-accessibility.org/example/32/">working example of Example 32 - Slider</loc>, on the OpenAjax Alliance site.</p>
                            </description>
                    </eg-group>
                    
                </examples>
				<resources>
					<see-also>
						<ulist>
                            <item><p><loc href="http://www.w3.org/TR/wai-aria/usage#usage_intro">Accessible Rich Internet Applications (WAI-ARIA) 1.0, Roles</loc></p>
                            </item>
                            <item><p><loc href="http://www.w3.org/TR/wai-aria/roles">Accessible Rich Internet Applications (WAI-ARIA) 1.0, The Roles Model</loc></p>
                            </item>
                            <item>
                                <p><loc href="http://www.w3.org/TR/wai-aria/states_and_properties">Accessible Rich Internet Applications (WAI-ARIA) 1.0, Supported States and Properties</loc></p>
                            </item>
                            <item><p><loc href="http://www.w3.org/TR/html-aapi/#html-element-to-accessibility-api-role-mapping-matrix">HTML to Platform Accessibility APIs Implementation Guide: HTML Element to Accessibility API Role Mapping Matrix</loc></p>
                            </item>
                            <item><p><loc href="http://www.w3.org/TR/wai-aria-primer/">WAI-ARIA 1.0 Primer</loc></p>
                            </item>
							<item>
								<p><loc ref="http://www.w3.org/TR/wai-aria-practices/">WAI-ARIA 1.0 Authoring Practices</loc> </p>
							</item>
							<item>
								<p><loc ref="http://www.w3.org/TR/aria-in-html/">Using WAI-ARIA in HTML</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
<related-techniques>
					<relatedtech idref="ARIA4"/>
					<relatedtech idref="H91"/>
				</related-techniques>
				<tests>
					<procedure>
                        <p><loc href="http://www.w3.org/TR/wai-aria/roles#roles_categorization">The WAI-ARIA specification, Section 5.3, Categorization of Roles</loc> defines the required and inherited states and properties for each role.</p>
                        <p>For a user interface component using the WAI-ARIA role attribute:</p>
						<olist>
							<item>
								<p>Check that the required states and properties for the role are present.</p>
							</item>
							<item>
								<p>Check that no WAI-ARIA states or properties that are neither required, supported, nor inherited are present.</p>
							</item>
							<item>
								<p>Check that the state and property values are updated to reflect the current state when the user interface component changes state.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#1, #2, and #3 are true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="ARIA6">
				<short-name>Using aria-label to provide labels for objects</short-name>
				<applicability>
					<p>Technologies that support <loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA)</loc>. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="text-equiv-all" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>See <specref ref="wai-aria_ua_support"/> for general information on user agent support.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The purpose of this technique is to provide a label for objects that can be read by assistive technology. The <att>aria-label</att> attribute provides the text label for an object, such as a button. When a screen reader encounters the object, the <att>aria-label</att> text is read so that the user will know what it is.</p>
                    <p>Authors should be aware that <att>aria-label</att> may be disregarded by assistive technologies in situations where <att>aria-labelledby</att> is used for the same object. For more information on the naming hierarchy please consult the <loc href="http://www.w3.org/TR/wai-aria/roles#textalternativecomputation">ARIA specification</loc> and the <loc href="http://www.w3.org/TR/html-aapi/#accessible-name-and-description-calculation">accessible name and description calculation</loc> in the HTML to Platform Accessibility APIs Implementation Guide. Authors should be aware that use of <att>aria-label</att> will override any native naming such as <att>alt</att> on images or <el>label</el> associated with a form field using the <att>for</att> attribute.</p>
				</description>
				<examples>
					<eg-group>
						<head></head>
						<description>
							<p>The following example shows how <att>aria-label</att> could be used to distinguish two navigation landmarks in a HTML4 and XHTML 1.0 document, where there are more than two of the same type of landmark on the same page, and there is no existing text on the page that can be referenced as the label.</p>
						<codeblock xml:space="preserve"><![CDATA[<div role="navigation" aria-label="Primary">
<ul><li>...a list of links here ...</li></ul> </div>
<div role="navigation" aria-label="Secondary">
<ul><li>...a list of links here ...</li> </ul></div>]]></codeblock>
                            </description>
                    </eg-group>
                    
					<eg-group>
						<head></head>
						<description>
							<p>The following example shows how a generic "region" landmark might be added to a weather portlet. There is no existing text on the page that can be referenced as the label, so it is labelled with <att>aria-label</att>.</p>
						<codeblock xml:space="preserve"><![CDATA[<div role="region" aria-label="weather portlet"> 
...
</div>]]></codeblock>
                            </description>
                    </eg-group>
                    
					<eg-group>
						<head></head>
						<description>
							<p>Below is an example of a math ML function, using the math role, appropriate label, and MathML rendering:</p>
						<codeblock xml:space="preserve"><![CDATA[<div role="math" aria-label="6 divided by 4 equals 1.5">
  <math xmlns="http://www.w3.org/1998/Math/MathML">
    <mfrac>
      <mn>6</mn>
      <mn>4</mn>
    </mfrac>
    <mo>=</mo>
    <mn>1.5</mn>
  </math>
</div>]]></codeblock>
                            </description>
                    </eg-group>
                </examples>
				<resources>
					<see-also>
						<ulist>
                            <item><p><loc href="http://www.w3.org/TR/html-aapi/#html-element-to-accessibility-api-role-mapping-matrix">HTML to Platform Accessibility APIs Implementation Guide: HTML Element to Accessibility API Role Mapping Matrix</loc></p>
                            </item>
							<item>
								<p><loc ref="http://www.w3.org/TR/wai-aria-practices/">WAI-ARIA 1.0 Authoring Practices</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
<related-techniques>
					<relatedtech idref="ARIA16"/>
					<relatedtech idref="H44"/>
				</related-techniques>
				<tests>
					<procedure>
                        <p>For each element where a <att>aria-label</att> attribute is present.</p>
						<olist>
							<item>
								<p>Examine whether the text description accurately labels the object or provides a description of its purpose or provides equivalent information.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="ARIA7">
				<short-name>Using aria-labelledby for link purpose</short-name>
				<applicability>
					<p>Technologies that support <loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA)</loc>. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>See <specref ref="wai-aria_ua_support"/> for general information on user agent support.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>With the <att>aria-labelledby</att> attribute, authors can use a visible text element on the page as a label for a focusable element (a form control or a link). For example, a "read more..." link could be associated with the text of the heading of the preceding section to make the purpose of the link unambiguous (see example 1).</p>
                    <p>When associating text to a focusable element with the help of <att>aria-labelledby</att>, the target text element is given an ID which is referenced in the value of the <att>aria-labelledby</att> attribute of the focusable element.</p>
                    <p>It is also possible to use several text elements on the page as a label for a focusable element. Each of the text elements used must be given a unique ID which is referenced as a string of IDs (IDREF) in the value of the <att>aria-labelledby</att> attribute. The label text should then be concatenated following the order of IDs in the value of the <att>aria-labelledby</att> attribute.</p>
                    <p>When applied on links, <att>aria-labelledby</att> can be used to identify the purpose of a link that may be readily apparent for sighted users, but less obvious for screen reader users.</p>
                    <p>The specified behavior of <att>aria-labelledby</att> is that the associated label text is announced instead of the link text (not in addition to the link text). When the link text itself should be included in the label text, the ID of the link should be referenced as well in the string of IDs forming the value of the <att>aria-labelledby</att> attribute.</p>
                    <p>For more information on the naming hierarchy please consult the <loc href="http://www.w3.org/TR/wai-aria/roles#textalternativecomputation">ARIA specification</loc> and the <loc href="http://www.w3.org/TR/html-aapi/#accessible-name-and-description-calculation">accessible name and description calculation</loc> in the HTML to Platform Accessibility APIs Implementation Guide.</p>
				</description>
				<examples>
					<eg-group>
						<head></head>
						<description>
							<p>This example should replace the "read more" link text at the end of the teaser text with the content of the <el>h2</el> heading referenced by <att>aria-labelledby</att>.</p>
						<codeblock xml:space="preserve"><![CDATA[<h2 id="headline">Storms hit east coast</h2>

<p>Torrential rain and gale force winds have struck the east coast, causing flooding in many coastal towns.
   <a href="news.html" aria-labelledby="headline">Read more...</a></p>]]></codeblock>
                            </description>
                    </eg-group>
                    
					<eg-group>
						<head></head>
						<description>
							<p>The following example concatenates a link name through <att>aria-labelledby</att> referencing both the report title, "2012 Sales Report", and the respective file type, (PDF, Word, or Powerpoint).</p>
						<codeblock xml:space="preserve"><![CDATA[<p id="report-title">Download 2012 Sales Report:
<a aria-labelledby="report-title pdf" href="#" id="pdf">PDF</a> |
<a aria-labelledby="report-title doc" href="#" id="doc">Word</a> |
<a aria-labelledby="report-title ppt" href="#" id="ppt">Powerpoint</a></p>]]></codeblock>
                            </description>
                    </eg-group>
                    
					<eg-group>
						<head></head>
						<description>
							<p>There may be cases where an author will placed a tag around a section of code that will be referenced.</p>
                            <p>Note: The use of <code>tabindex="-1"</code> on the <el>span</el> element is not meant to support focusing by scripts - here, it merely serves to ensure that some browsers (IE9, IE10) will include the <el>span</el> element in the accessibility tree, thus making it available for reference by <att>aria-labelledby</att>. For more details see <loc href="http://msdn.microsoft.com/en-us/library/ie/gg701963%28v=vs.85%29.aspx#Accessible_HTML_Elements">Accessible HTML Elements</loc>.</p>
						<codeblock xml:space="preserve"><![CDATA[<p>Download <span id="report-title" tabindex="-1">2012 Sales Report</span>:
<a aria-labelledby="report-title pdf" href="#" id="pdf">PDF</a> |
<a aria-labelledby="report-title doc" href="#" id="doc">Word</a> |
<a aria-labelledby="report-title ppt" href="#" id="ppt">Powerpoint</a></p>]]></codeblock>
                            </description>
                    </eg-group>
                </examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc ref="http://www.w3.org/TR/html-aapi/#accessible-name-and-description-calculation">HTML to Platform Accessibility APIs Implementation Guide: Accessible Name and Description Calculation</loc> </p>
							</item>
						</ulist>
					</see-also>
				</resources>
<related-techniques>
				</related-techniques>
				<tests>
					<procedure>
						<p>For each link that has an <att>aria-labelledby</att> attribute:</p>
                        <olist>
							<item>
								<p>Check that each ID in the value of the <att>aria-labelledby</att> attribute matches an ID of a text element used as part of the link purpose.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
			<technique id="ARIA8">
				<short-name>Using aria-label for link purpose</short-name>
				<applicability>
					<p>Technologies that support <loc href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA)</loc>. </p>
				</applicability>
				<applies-to>
					<success-criterion idref="navigation-mechanisms-refs" relationship="sufficient"/>
					<success-criterion idref="navigation-mechanisms-links" relationship="sufficient"/>
				</applies-to>
				<ua-issues>
					<ua-issue name="" version="">
						<p>See <specref ref="wai-aria_ua_support"/> for general information on user agent support.</p>
					</ua-issue>
				</ua-issues>
				<description>
					<p>The objective of this technique is to describe the purpose of a link using the <att>aria-label</att> attribute. The <att>aria-label</att> attribute provides a way to place a descriptive text label on an object, such as a link, when there are no elements visible on the page that describe the object. If descriptive elements are visible on the page, the <att>aria-labelledby</att> attribute should be used instead of <att>aria-label</att>. Providing a descriptive text label lets a user distinguish the link from links in the Web page that lead to other destinations and helps the user determine whether to follow the link. In some assistive technologies the <att>aria-label</att> value will show in the list of links instead of the actual link text.</p>
                    <p>Per the <loc href="http://www.w3.org/TR/wai-aria/roles#textalternativecomputation">WAI-ARIA specification</loc> and the <loc href="http://www.w3.org/TR/html-aapi/#accessible-name-and-description-calculation">HTML to Platform Accessibility APIs Implementation Guide</loc>, the <att>aria-label</att> text will override the text supplied within the link. As such the text supplied will be used instead of the link text by AT. Due to this it is recommended to start the text used in <att>aria-label</att> with the text used within the link. This will allow consistent communication between users.</p>
				</description>
				<examples>
					<eg-group>
						<head></head>
						<description>
							<p>Describing the purpose of a link in HTML using the aria-label element. In some situations, designers may choose to lessen the visual appearance of links on a page by using shorter, repeated link text such as "read more". These situations provide a good use case for aria-label in that the simpler, non-descriptive "read more" text on the page can be replaced with a more descriptive label of the link. The words 'read more' are repeated in the aria-label (which replaces the original anchor text of "[Read more...]") to allow consistent communication between users.</p>
						<codeblock xml:space="preserve"><![CDATA[ <h4>Neighborhood News</h4>
 <p>Seminole tax hike:  Seminole city managers are proposing a 75% increase in 
 property taxes for the coming fiscal year.
 <a href="taxhike.html" aria-label="Read more about Seminole tax hike">[Read more...]</a>
 </p> 

 <p>Baby Mayor:  Seminole voters elect the city's youngest mayor ever by voting in 3 year
 old Willy "Dusty" Williams in yesterday's mayoral election.
 <a href="babymayor.html" aria-label="Read more about Seminole's new baby mayor">[Read more...]</a>
 </p>]]></codeblock>
                            </description>
                    </eg-group>
                </examples>
				<resources>
					<see-also>
						<ulist>
							<item>
								<p><loc ref="http://www.w3.org/TR/html-aapi/#accessible-name-and-description-calculation">HTML to Platform Accessibility APIs Implementation Guide: Accessible Name and Description Calculation</loc> </p>
							</item>
							<item>
								<p><loc ref="http://www.w3.org/TR/wai-aria/roles#textalternativecomputation">WAI-ARIA Text Alternative Computation</loc></p>
							</item>
						</ulist>
					</see-also>
				</resources>
<related-techniques>
					<relatedtech idref="ARIA6"/>
					<relatedtech idref="ARIA14"/>
					<relatedtech idref="ARIA7"/>
					<relatedtech idref="G91"/>
					<relatedtech idref="H30"/>
				</related-techniques>
				<tests>
					<procedure>
                        <p>For link elements that use <att>aria-label</att>:</p>
						<olist>
							<item>
								<p>Check that the value of the <att>aria-label</att> attribute properly describes the purpose of the link element.</p>
							</item>
						</olist>
					</procedure>
					<expected-results>
						<ulist>
							<item>
								<p>#1 is true.</p>
							</item>
						</ulist>
					</expected-results>
				</tests>
			</technique>
            
        </div1>
	</body>
	<back>
		<div1 id="placeholders">
			<!-- note: this can be updated using /misc/id-list.xslt (requires cut and paste)-->
			<head/>
			<p id="UNKNOWN">place holder for idref</p>
			<p id="cc1">placeholder for cc1</p>
			<p id="cc2">placeholder for cc2</p>
			<p id="cc3">placeholder for cc3</p>
			<p id="cc4">placeholder for cc4</p>
			<p id="cc5">placeholder for cc5</p>
			<p id="text-equiv">placeholder for text-equiv</p>
			<p id="text-equiv-all">placeholder for text-equiv-all</p>
			<p id="text-equiv-live-audio-only">placeholder for text-equiv-live-audio-only</p>
			<p id="media-equiv">placeholder for media-equiv</p>
			<p id="media-equiv-av-only-alt">placeholder for media-equiv-av-only-alt</p>
			<p id="media-equiv-captions">placeholder for media-equiv-captions</p>
			<p id="media-equiv-audio-desc">placeholder for media-equiv-audio-desc</p>
			<p id="media-equiv-real-time-captions">placeholder for media-equiv-real-time-captions</p>
			<p id="media-equiv-audio-desc-only">placeholder for media-equiv-audio-desc-only</p>
			<p id="media-equiv-sign">placeholder for media-equiv-sign</p>
			<p id="media-equiv-extended-ad">placeholder for media-equiv-extended-ad</p>
			<p id="media-equiv-text-doc">placeholder for media-equiv-text-doc</p>
			<p id="media-equiv-live-audio-only">placeholder for media-equiv-live-audio-only</p>
			<p id="content-structure-separation">placeholder for content-structure-separation</p>
			<p id="content-structure-separation-programmatic">placeholder for content-structure-separation-programmatic</p>
			<p id="content-structure-separation-sequence">placeholder for content-structure-separation-sequence</p>
			<p id="content-structure-separation-understanding">placeholder for content-structure-separation-understanding</p>
			<p id="visual-audio-contrast">placeholder for visual-audio-contrast</p>
			<p id="visual-audio-contrast-without-color">placeholder for visual-audio-contrast-without-color</p>
			<p id="visual-audio-contrast-dis-audio">placeholder for visual-audio-contrast-dis-audio</p>
			<p id="visual-audio-contrast-contrast">placeholder for visual-audio-contrast-contrast</p>
			<p id="visual-audio-contrast-scale">placeholder for visual-audio-contrast-scale</p>
			<p id="visual-audio-contrast-text-presentation">placeholder for visual-audio-contrast-text-presentation</p>
			<p id="visual-audio-contrast7">placeholder for visual-audio-contrast7</p>
			<p id="visual-audio-contrast-noaudio">placeholder for visual-audio-contrast-noaudio</p>
			<p id="visual-audio-contrast-visual-presentation">placeholder for visual-audio-contrast-visual-presentation</p>
			<p id="visual-audio-contrast-text-images">placeholder for visual-audio-contrast-text-images</p>
			<p id="keyboard-operation">placeholder for keyboard-operation</p>
			<p id="keyboard-operation-keyboard-operable">placeholder for keyboard-operation-keyboard-operable</p>
			<p id="keyboard-operation-trapping">placeholder for keyboard-operation-trapping</p>
			<p id="keyboard-operation-all-funcs">placeholder for keyboard-operation-all-funcs</p>
			<p id="time-limits">placeholder for time-limits</p>
			<p id="time-limits-required-behaviors">placeholder for time-limits-required-behaviors</p>
			<p id="time-limits-pause">placeholder for time-limits-pause</p>
			<p id="time-limits-no-exceptions">placeholder for time-limits-no-exceptions</p>
			<p id="time-limits-postponed">placeholder for time-limits-postponed</p>
			<p id="time-limits-server-timeout">placeholder for time-limits-server-timeout</p>
			<p id="seizure">placeholder for seizure</p>
			<p id="seizure-does-not-violate">placeholder for seizure-does-not-violate</p>
			<p id="seizure-three-times">placeholder for seizure-three-times</p>
			<p id="navigation-mechanisms">placeholder for navigation-mechanisms</p>
			<p id="navigation-mechanisms-skip">placeholder for navigation-mechanisms-skip</p>
			<p id="navigation-mechanisms-title">placeholder for navigation-mechanisms-title</p>
			<p id="navigation-mechanisms-focus-order">placeholder for navigation-mechanisms-focus-order</p>
			<p id="navigation-mechanisms-refs">placeholder for navigation-mechanisms-refs</p>
			<p id="navigation-mechanisms-mult-loc">placeholder for navigation-mechanisms-mult-loc</p>
			<p id="navigation-mechanisms-descriptive">placeholder for navigation-mechanisms-descriptive</p>
			<p id="navigation-mechanisms-focus-visible">placeholder for navigation-mechanisms-focus-visible</p>
			<p id="navigation-mechanisms-location">placeholder for navigation-mechanisms-location</p>
			<p id="navigation-mechanisms-link">placeholder for navigation-mechanisms-link</p>
			<p id="navigation-mechanisms-headings">placeholder for navigation-mechanisms-headings</p>
			<p id="meaning">placeholder for meaning</p>
			<p id="meaning-doc-lang-id">placeholder for meaning-doc-lang-id</p>
			<p id="meaning-other-lang-id">placeholder for meaning-other-lang-id</p>
			<p id="meaning-idioms">placeholder for meaning-idioms</p>
			<p id="meaning-located">placeholder for meaning-located</p>
			<p id="meaning-supplements">placeholder for meaning-supplements</p>
			<p id="meaning-pronunciation">placeholder for meaning-pronunciation</p>
			<p id="consistent-behavior">placeholder for consistent-behavior</p>
			<p id="consistent-behavior-receive-focus">placeholder for consistent-behavior-receive-focus</p>
			<p id="consistent-behavior-unpredictable-change">placeholder for consistent-behavior-unpredictable-change</p>
			<p id="consistent-behavior-consistent-locations">placeholder for consistent-behavior-consistent-locations</p>
			<p id="consistent-behavior-consistent-functionality">placeholder for consistent-behavior-consistent-functionality</p>
			<p id="consistent-behavior-no-extreme-changes-context">placeholder for consistent-behavior-no-extreme-changes-context</p>
			<p id="minimize-error">placeholder for minimize-error</p>
			<p id="minimize-error-identified">placeholder for minimize-error-identified</p>
			<p id="minimize-error-cues">placeholder for minimize-error-cues</p>
			<p id="minimize-error-suggestions">placeholder for minimize-error-suggestions</p>
			<p id="minimize-error-reversible">placeholder for minimize-error-reversible</p>
			<p id="minimize-error-context-help">placeholder for minimize-error-context-help</p>
			<p id="minimize-error-reversible-all">placeholder for minimize-error-reversible-all</p>
			<p id="ensure-compat">placeholder for ensure-compat</p>
			<p id="ensure-compat-parses">placeholder for ensure-compat-parses</p>
			<p id="ensure-compat-rsv">placeholder for ensure-compat-rsv</p>
			<p id="G1">placeholder for G1</p>
			<p id="G4">placeholder for G4</p>
			<p id="G5">placeholder for G5</p>
			<p id="G8">placeholder for G8</p>
			<p id="G9">placeholder for G9</p>
			<p id="G10">placeholder for G10</p>
			<p id="G11">placeholder for G11</p>
			<p id="G13">placeholder for G13</p>
			<p id="G14">placeholder for G14</p>
			<p id="G15">placeholder for G15</p>
			<p id="G17">placeholder for G17</p>
			<p id="G18">placeholder for G18</p>
			<p id="G19">placeholder for G19</p>
			<p id="G21">placeholder for G21</p>
			<p id="G53">placeholder for G53</p>
			<p id="G54">placeholder for G54</p>
			<p id="G55">placeholder for G55</p>
			<p id="G56">placeholder for G56</p>
			<p id="G57">placeholder for G57</p>
			<p id="G58">placeholder for G58</p>
			<p id="G59">placeholder for G59</p>
			<p id="G60">placeholder for G60</p>
			<p id="G61">placeholder for G61</p>
			<p id="G62">placeholder for G62</p>
			<p id="G63">placeholder for G63</p>
			<p id="G64">placeholder for G64</p>
			<p id="G65">placeholder for G65</p>
			<p id="G68">placeholder for G68</p>
			<p id="G69">placeholder for G69</p>
			<p id="G70">placeholder for G70</p>
			<p id="G71">placeholder for G71</p>
			<p id="G73">placeholder for G73</p>
			<p id="G74">placeholder for G74</p>
			<p id="G75">placeholder for G75</p>
			<p id="G76">placeholder for G76</p>
			<p id="G78">placeholder for G78</p>
			<p id="G79">placeholder for G79</p>
			<p id="G80">placeholder for G80</p>
			<p id="G81">placeholder for G81</p>
			<p id="G82">placeholder for G82</p>
			<p id="G83">placeholder for G83</p>
			<p id="G84">placeholder for G84</p>
			<p id="G85">placeholder for G85</p>
			<p id="G86">placeholder for G86</p>
			<p id="G87">placeholder for G87</p>
			<p id="G88">placeholder for G88</p>
			<p id="G89">placeholder for G89</p>
			<p id="G90">placeholder for G90</p>
			<p id="G91">placeholder for G91</p>
			<p id="G92">placeholder for G92</p>
			<p id="G93">placeholder for G93</p>
			<p id="G94">placeholder for G94</p>
			<p id="G95">placeholder for G95</p>
			<p id="G96">placeholder for G96</p>
			<p id="G97">placeholder for G97</p>
			<p id="G98">placeholder for G98</p>
			<p id="G99">placeholder for G99</p>
			<p id="G100">placeholder for G100</p>
			<p id="G101">placeholder for G101</p>
			<p id="G102">placeholder for G102</p>
			<p id="G103">placeholder for G103</p>
			<p id="G105">placeholder for G105</p>
			<p id="G107">placeholder for G107</p>
			<p id="G108">placeholder for G108</p>
			<p id="G110">placeholder for G110</p>
			<p id="G111">placeholder for G111</p>
			<p id="G112">placeholder for G112</p>
			<p id="G115">placeholder for G115</p>
			<p id="G117">placeholder for G117</p>
			<p id="G120">placeholder for G120</p>
			<p id="G121">placeholder for G121</p>
			<p id="G122">placeholder for G122</p>
			<p id="G123">placeholder for G123</p>
			<p id="G124">placeholder for G124</p>
			<p id="G125">placeholder for G125</p>
			<p id="G126">placeholder for G126</p>
			<p id="G127">placeholder for G127</p>
			<p id="G128">placeholder for G128</p>
			<p id="G130">placeholder for G130</p>
			<p id="G131">placeholder for G131</p>
			<p id="G133">placeholder for G133</p>
			<p id="G134">placeholder for G134</p>
			<p id="G135">placeholder for G135</p>
			<p id="G136">placeholder for G136</p>
			<p id="G138">placeholder for G138</p>
			<p id="G139">placeholder for G139</p>
			<p id="G140">placeholder for G140</p>
			<p id="G141">placeholder for G141</p>
			<p id="G142">placeholder for G142</p>
			<p id="G143">placeholder for G143</p>
			<p id="G144">placeholder for G144</p>
			<p id="G145">placeholder for G145</p>
			<p id="G146">placeholder for G146</p>
			<p id="G147">placeholder for G147</p>
			<p id="G148">placeholder for G148</p>
			<p id="G149">placeholder for G149</p>
			<p id="G150">placeholder for G150</p>
			<p id="G151">placeholder for G151</p>
			<p id="G152">placeholder for G152</p>
			<p id="G153">placeholder for G153</p>
			<p id="G154">placeholder for G154</p>
			<p id="G155">placeholder for G155</p>
			<p id="G156">placeholder for G156</p>
			<p id="G157">placeholder for G157</p>
			<p id="H2">placeholder for H2</p>
			<p id="H4">placeholder for H4</p>
			<p id="H24">placeholder for H24</p>
			<p id="H25">placeholder for H25</p>
			<p id="H27">placeholder for H27</p>
			<p id="H28">placeholder for H28</p>
			<p id="H30">placeholder for H30</p>
			<p id="H32">placeholder for H32</p>
			<p id="H33">placeholder for H33</p>
			<p id="H34">placeholder for H34</p>
			<p id="H35">placeholder for H35</p>
			<p id="H36">placeholder for H36</p>
			<p id="H37">placeholder for H37</p>
			<p id="H39">placeholder for H39</p>
			<p id="H40">placeholder for H40</p>
			<p id="H42">placeholder for H42</p>
			<p id="H43">placeholder for H43</p>
			<p id="H44">placeholder for H44</p>
			<p id="H45">placeholder for H45</p>
			<p id="H46">placeholder for H46</p>
			<p id="H48">placeholder for H48</p>
			<p id="H49">placeholder for H49</p>
			<p id="H50">placeholder for H50</p>
			<p id="H51">placeholder for H51</p>
			<p id="H53">placeholder for H53</p>
			<p id="H54">placeholder for H54</p>
			<p id="H56">placeholder for H56</p>
			<p id="H57">placeholder for H57</p>
			<p id="H58">placeholder for H58</p>
			<p id="H59">placeholder for H59</p>
			<p id="H60">placeholder for H60</p>
			<p id="H62">placeholder for H62</p>
			<p id="H63">placeholder for H63</p>
			<p id="H64">placeholder for H64</p>
			<p id="H65">placeholder for H65</p>
			<p id="H67">placeholder for H67</p>
			<p id="H69">placeholder for H69</p>
			<p id="H70">placeholder for H70</p>
			<p id="H71">placeholder for H71</p>
			<p id="H73">placeholder for H73</p>
			<p id="H74">placeholder for H74</p>
			<p id="H75">placeholder for H75</p>
			<p id="H76">placeholder for H76</p>
			<p id="H77">placeholder for H77</p>
			<p id="H78">placeholder for H78</p>
			<p id="H79">placeholder for H79</p>
			<p id="H80">placeholder for H80</p>
			<p id="H81">placeholder for H81</p>
			<p id="H82">placeholder for H82</p>
			<p id="H83">placeholder for H83</p>
			<p id="H84">placeholder for H84</p>
			<p id="H85">placeholder for H85</p>
			<p id="C6">placeholder for C6</p>
			<p id="C7">placeholder for C7</p>
			<p id="C8">placeholder for C8</p>
			<p id="C9">placeholder for C9</p>
			<p id="C12">placeholder for C12</p>
			<p id="C13">placeholder for C13</p>
			<p id="C14">placeholder for C14</p>
			<p id="C15">placeholder for C15</p>
			<p id="C16">placeholder for C16</p>
			<p id="C17">placeholder for C17</p>
			<p id="C18">placeholder for C18</p>
			<p id="C19">placeholder for C19</p>
			<p id="C20">placeholder for C20</p>
			<p id="C21">placeholder for C21</p>
			<p id="SCR1">placeholder for SCR1</p>
			<p id="SCR14">placeholder for SCR14</p>
			<p id="SCR16">placeholder for SCR16</p>
			<p id="SCR18">placeholder for SCR18</p>
			<p id="SCR19">placeholder for SCR19</p>
			<p id="SCR20">placeholder for SCR20</p>
			<p id="SCR21">placeholder for SCR21</p>
			<p id="SCR22">placeholder for SCR22</p>
			<p id="SCR24">placeholder for SCR24</p>
			<p id="SCR26">placeholder for SCR26</p>
			<p id="SCR27">placeholder for SCR27</p>
			<p id="SVR1">placeholder for SVR1</p>
			<p id="SVR2">placeholder for SVR2</p>
			<p id="SVR3">placeholder for SVR3</p>
			<p id="SM1">placeholder for SM1</p>
			<p id="SM2">placeholder for SM2</p>
			<p id="SM6">placeholder for SM6</p>
			<p id="SM7">placeholder for SM7</p>
			<p id="SM11">placeholder for SM11</p>
			<p id="SM12">placeholder for SM12</p>
			<p id="SM13">placeholder for SM13</p>
			<p id="SM14">placeholder for SM14</p>
			<p id="T1">placeholder for T1</p>
			<p id="T2">placeholder for T2</p>
			<p id="T3">placeholder for T3</p>
			<p id="F1">placeholder for F1</p>
			<p id="F2">placeholder for F2</p>
			<p id="F3">placeholder for F3</p>
			<p id="F4">placeholder for F4</p>
			<p id="F7">placeholder for F7</p>
			<p id="F8">placeholder for F8</p>
			<p id="F9">placeholder for F9</p>
			<p id="F10">placeholder for F10</p>
			<p id="F12">placeholder for F12</p>
			<p id="F13">placeholder for F13</p>
			<p id="F14">placeholder for F14</p>
			<p id="F15">placeholder for F15</p>
			<p id="F16">placeholder for F16</p>
			<p id="F17">placeholder for F17</p>
			<p id="F19">placeholder for F19</p>
			<p id="F20">placeholder for F20</p>
			<p id="F22">placeholder for F22</p>
			<p id="F23">placeholder for F23</p>
			<p id="F24">placeholder for F24</p>
			<p id="F25">placeholder for F25</p>
			<p id="F26">placeholder for F26</p>
			<p id="F30">placeholder for F30</p>
			<p id="F31">placeholder for F31</p>
			<p id="F32">placeholder for F32</p>
			<p id="F33">placeholder for F33</p>
			<p id="F34">placeholder for F34</p>
			<p id="F36">placeholder for F36</p>
			<p id="F37">placeholder for F37</p>
			<p id="F38">placeholder for F38</p>
			<p id="F39">placeholder for F39</p>
			<p id="F40">placeholder for F40</p>
			<p id="F41">placeholder for F41</p>
			<p id="F42">placeholder for F42</p>
			<p id="F43">placeholder for F43</p>
			<p id="F44">placeholder for F44</p>
			<p id="F46">placeholder for F46</p>
			<p id="F47">placeholder for F47</p>
			<p id="F48">placeholder for F48</p>
			<p id="F49">placeholder for F49</p>
			<p id="F50">placeholder for F50</p>
			<p id="F52">placeholder for F52</p>
			<p id="F54">placeholder for F54</p>
			<p id="F55">placeholder for F55</p>
			<p id="F58">placeholder for F58</p>
			<p id="F59">placeholder for F59</p>
			<p id="F60">placeholder for F60</p>
			<p id="F61">placeholder for F61</p>
			<p id="F62">placeholder for F62</p>
			<p id="F63">placeholder for F63</p>
			<p id="F65">placeholder for F65</p>
			<p id="F66">placeholder for F66</p>
			<p id="F67">placeholder for F67</p>
			<p id="F68">placeholder for F68</p>
			<p id="F69">placeholder for F69</p>
			<p id="F70">placeholder for F70</p>
			<p id="F71">placeholder for F71</p>
			<p id="F72">placeholder for F72</p>
			<p id="F73">placeholder for F73</p>
			<p id="F74">placeholder for F74</p>
			<p id="F75">placeholder for F75</p>
			<p id="F76">placeholder for F76</p>
			<p id="F77">placeholder for F77</p>
			<p id="F78">placeholder for F78</p>
			<p id="F79">placeholder for F79</p>
			<p id="F80">placeholder for F80</p>
			<p id="F81">placeholder for F81</p>
			<p id="F82">placeholder for F82</p>
			<p id="F83">placeholder for F83</p>
			<p id="F84">placeholder for F84</p>
			<p id="F85">placeholder for F85</p>
			<p id="F86">placeholder for F86</p>
		</div1>
	</back>
</spec>
